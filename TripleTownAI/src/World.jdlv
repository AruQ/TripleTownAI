package logic;

public class World
{
	
	logic.Matrix matrix = new Matrix ();
	public World()
	{
		// TODO Auto-generated constructor stub
	}

	public List<logic.Cell> update(Cell lastAdded)
	{
		List<logic.Cell> cells = matrix.toCells ();
		List<logic.Cell> neighbours = new ArrayList();
		
		<# (findNeighbour)
		IN = cells::matrix;
		IN = lastAdded::lastAdded;
		OUT = neighbours :: neighbour;

		adjacent (X,Y,X,Y1):- matrix (X,Y,_),matrix (X,Y1,_), Y=Y1+1.
		adjacent (X,Y,X1,Y):- matrix (X,Y,_),matrix (X1,Y,_), X=X1+1.
		adjacent (X,Y,X1,Y1) :- adjacent (X1,Y1,X,Y).
		neighbour (X,Y,T) :- lastAdded (X,Y,T).
		neighbour (X,Y,T) :- matrix (X,Y,T), neighbour (X1,Y1,T), adjacent (X,Y,X1,Y1).
		#>
	  	return neighbours; 
	}

}
